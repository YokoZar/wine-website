<!--TITLE:[תרומה ל־Wine]-->
<!--BLURB:[נשמח לקבל את עזרתך]-->

<h1 class="title">תרומה ל־Wine</h1>

<p>It's easy to be a bit overwhelmed when you're new to Wine. Yes there may be a lot of things to 
  do but where should you start? Is there anything simple that can get you started? Is there 
  anything you can do that does not require an intimate knowledge of the Windows API and of 
  Wine's internals? What if you don't know C? Or if you're not a programmer in the first place?</p>
<p>So here are a few projects that might provide you with a starting point. Note that this list 
  is not an official statement of what should be done on Wine or anything. It's just a list of 
  things that are important and useful. In any case we welcome your feedback. Similarly, if you 
  can think of projects to add to the list let us know too.</p>
<p>Many projects can be performed even if you are not a C programmer or if you don't have an intricate 
  knowledge of the Windows internals. Let us know if you are interested in tackling a given project.</p>
<p>Here are a few items to help you get started:</p>

<ol type="A">
  <li><a href="#web_site">תחזוקה כללית</a>
    <ol>
      <li><a href="http://wiki.winehq.org/CreateFonts">יצירת גופנים</a></li>
      <li><a href="#draw">ציור סמלים (אייקונים) ל־wine</a></li>
      <li><a href="#app_owners">בעלי יישומים</a></li>
      <li><a href="#support">ציד באגים ותמיכה</a></li>
    </ol>
  </li>
  <li><a href="#devel">תכנות</a>
    <ol>
      <li><a href="#devel_task">משימות שדורשות תכנות</a></li>
      <li><a href="#conf_tests">בדיקות הסתגלות</a></li>
      <li><a href="#doc_win_api">תיעוד של פונקציות ה־API של windows</a></li>
      <li><a href="#port_app">הסבת יישום ה־Windows שלך ל־Wine</a></li>
      <li><a href="#code_review">הכנסת סקירת קוד ממוקדת</a></li>
    </ol>
  </li>
  <li><a href="#misc">שונות</a>
    <ol>
      <li><a href="#doc">כתיבת תיעוד</a></li>
      <li><a href="#localized">עבודות תרגום</a></li>
      <li><a href="#pr_">יחסי ציבור</a></li>
      <li><a href="#wpf">תרומות כלכליות</a></li>
    </ol>
  </li>
</ol>

<h3 id="draw">ציור סמלים (אייקונים) ל־Wine</h3>

<p>אין באפשרות Wine למחזר את הסמלים של Windows באופן מובהק עקב נושאי זכויות יוצרים. לכן עלינו לצייר אותם מחדש
  ולשמור על עיצוב דומה כדי שהמשתמשים לא ילכו לאיבור לחלוטין, כל זאת תוך הפיכתם לשונים מספיק (ואולי
  אף נאים מספיק). ניתן לראות כאלה כשפותחים דו־שיח לבחירת קבצים.</p>
<p>כישורים נדרשים:</p>
<ul>
  <li>כישורי ציור בעזרת מחשב</li>
</ul>

<h3 id="app_owners">מסד נתוני היישומים: מתחזקי יישומים</h3>

<p>Another very important aspect of Wine testing is to use or test real
  applications regularly and report regressions as soon as possible to the Wine 
  developers. This way regressions are caught early, while the set of changes
  to search through is still small and the Wine developer who made the change
  still around. Another reason why <b>your</b> contribution is especially
  valuable is that Wine developers probably do not have access to the
  application (they cannot buy all the applications out there) or do not know
  it well enough to test it properly.</p>
<p>You can help even further by becoming an 'application maintainer', that is by 
  maintaining that application's entry in the <a href="http://appdb.winehq.org/">Application Database</a>. Many 
  applications can be made to run (or run better) by using just the right mix
  of native (Windows) and built-in (Wine) libraries. By testing the application 
  with various library mix and then documenting your results in the
  corresponding Application Database entry, you will help other Wine users be
  productive with that application, thus making Wine useful to a greater number
  of people.</p>
<p>כישורים נדרשים:</p>
<ul>
  <li>ידע מעמיק ביישום מסוים</li>
  <li>Being dedicated to using / testing this application with each new Wine
    release or more often. It is more important to test one application
    regularly than ten applications once a year.</li>
  <li>Report all regressions to wine-devel, and cooperate with the developers 
    to diagnose the issue.</li>
  <li>Create and maintain an HOWTO Note on the application page summarizing 
    all actions required to get the application to run properly, e.g. 
    collected from the comments of visitors on the application/versions pages.</li>
  <li><strong>אין צורך</strong> בכישורי תכנות.</li>
</ul>

<h3 id="support">ציד באגים ותמיכה</h3>
<p>Because there are so many Windows applications out there, and because 
  very few of them work perfectly, we get a lot of questions from users, 
  many bug reports that need to be diagnosed and then many bugs to fix.</p>
<p>Thus bug diagnosis and support are two closely related activities that are 
  very important to Wine. So we need people willing to answer the questions 
  and issues that pop up on the newsgroup, wine-users and Bugzilla; and then 
  to triage them:</p>
<ul>
  <li>General Wine issues can usually be answered directly</li>
  <li>For application-specific issues one may want to check with the
    application owner (if any) to see if this is a known issue (ideally such
    issues should be listed in that application's entry)</li>
  <li>Other issues require more work to determine whether the problem is
    reproducible, specific to some environments, and to obtain logs that Wine
    developers can use to determine where the problem comes from
    (requires getting enough of an idea of where the problem comes from to 
    determine which debug options to use). Once this is done, it will be
    much easier for Wine developers to find the exact source of the bug and
    to come up with a fix.If the problem is not quickly resolved on the newsgroup
    or wine-users then starting a bug report in bugzilla. Search through the 
    unconfirmed and new bug reports and get them in proper shape for developers.
    Subscribe to to wine bugs (<a href="mailto:wine-bugs@winehq.org">wine-bugs@winehq.org</a>) 
    This read-only list has all entries for unassigned bugs sent to it.Confirming unconfirmed bugs and 
    suggesting debug channels to try are just some of the tasks that need to be done.</li>
</ul>
<p>ניתן גם לעיין בעמוד <a href="http://kegel.com/wine/qa/">מיזם אבטחת האיכות של Wine</a> 
  שנכתב על ידי דן קיגל כדי לערוך היכרות שלב אחר שלב למתנדבי אבטחת האיכות של Wine.</p>
<p>כישורים נדרשים:</p>
<ul>
  <li>General knowledge of the Wine configuration to be able to tell 
    users how to switch from managed to unmanaged window management, how to 
    disable FreeType support, etc.</li>
  <li>General knowledge of Wine issues, mostly gleaned by following the 
     mailing lists and newsgroup.</li>
  <li>Knowing how to switch from native to built-in libraries and vice-versa.</li>
  <li>Being able to analyze a log to determine which libraries to switch
    from built-in to native and vice-versa would be a plus.</li>
</ul>

<h2 id="devel">תכנות</h2>

<h3 id="devel_task">מספר משימות תכנותיות</h3>

<p>ניתן לצפות במצב ההטמעה הכללי של Wine ב<a href="{$root}/site/status">עמוד המצב של Wine</a>.</p>

<h3 id="conf_tests">בדיקות הסתגלות</h3>

<p>The goal of Wine's conformance testing is to make sure that the behavior 
  of Wine's APIs conforms to that of the corresponding Windows API. As there are many versions
  Window's from 95 to XP we need people to write the test as well as volunteers to run
  the test on Windows. The test suite is far from complete but every little bit helps.</p>
<ul>
  <li>Because they can be run in an automated way and on a regular basis, 
    the tests help detect regressions in Wine.</li>
  <li>The tests can be written in advance of the implementation of Wine
    features and then help the Wine implementer make sure his implementation
    is correct</li>
  <li>את הבדיקות ניתן לכתוב גם על Windows על ידי כאלה שאינם מתכנתי Wine</li>
  <li>גם כאלו שאינם מתכנתים יכולים לבצע את הבדיקות</li>
</ul>
<p>כישורים נדרשים:</p>
<ul>
  <li>כישורי תכנות ב־C</li>
  <li>ידע בפונקציות ה־API הנבדקות</li>
  <li><strong>אין צורך</strong> להשתמש בלינוקס/יוניקס; ניתן לכתוב בדיקות הסתגלות גם תחת Windows.</li>
  <li>התקנת Windows לבדיקה... 95, 98, 98SE, ME, NT, 2000, XP, Vista</li>
  <li<strong>אין צורך</strong> ביכולות תכנות להרצת הבדיקות.</li>
</ul>

<h3 id="doc_win_api">תיעוד של פונקציות ה־API של Windows</h3>

<p><strong>The main reason is that as MS moves to new APIs it tends to remove all documentation
  of the old ones (e.g. Win 3.1).</strong>  The goal is to write an independent documentation
  of the Windows API. Since we are re implementing all this API it would be a good coding
  practice to also document what we implement. We should in particular concentrate on aspects
  that are not very well covered in the 'official' documentation like discrepancies with the
  official documentation, bugs, platform specific aspects, and all these things that are typically 
  not very well covered like what happens if you pass a NULL pointer, if the buffer is too small, ...
  Without such a documentation new developers have no way of telling whether some strange quirk in 
  the implementation is insignificant or is actually a (mis)feature that some programs rely on. 
  As Wine matures such problems will become more and more important.</p>
<p>Required skills:</p>
<ul>
  <li>Knowledge of some documentation generation system for the person trying to enhance
    the documentation generation.</li>
  <li>A bit of C to document the APIs themselves.</li>
</ul>

<h3 id="port_app">הסבת יישום ה־Windows שלך ל־Wine</h3>

<p>If you are working on a Windows application, porting it to Wine may be the best way to
  get started for contributing code to Wine. You can start by trying to run it in Wine and
  then try to compile it with Wine.  The reason I suggest to start with an application you
  normally work on, is that first you obviously have access to the source code and second,
  since you programmed it, you know how it works. Furthermore you can attack the problem
  from both sides: put traces in your application and in Wine. All this combined together
  and makes it much easier to detect where Wine is doing something wrong, what and why.  
  Then, since you already know what Wine is supposed to do, you're also in a better position
  to provide a fix.  You can also test a programming book's examples in Wine. A kit to get
  started and create Web pages showing the results is available
  <a href="http://fgouget.free.fr/wine/booktesting-en.shtml">here</a>.</p>
<p>כישורים נדרשים:</p>
<ul>
  <li>בדיקה</li>
  <li>כתיבת דוחות באגים</li>
  <li>ניפוי שגיאות ותיקונן במידת הניתן</li>
  <li>תכנות ב־ C/C++ אם ברצונך לנסות להדר את התכניות בעזרת Wine lib</li>
</ul>

<h3 id ="code_review">הכנת סקירת קוד ממוקדת</h3>

<p>A regular 'random' code review can be pretty boring and inefficient. But I think that
  if you are looking for something specific it can be a productive way of finding and fixing
  bugs.  Typically you would start by picking a subject. For instance I once found code that
  was using strncpy without making sure the resulting string would be '\0' terminated.
  One would normally fix this specific piece of code and move on. But how many similar hard
  to find bugs would this leave elsewhere? So I decided to check all instances of strncpy.
  This can take some time so one cannot always do it (drop me a line if you think of some
  specific bug to look for but you don't have time). But it's a nice way to get acquainted 
  with the code and you can actually find bugs without needing months of experience on
  Wine's code.</p>
<p>But be warned though that since your changes will be scattered throughout Wine they
  will be scrutinized by many developers. Furthermore since your changes probably will
  not be direct obvious bug fixes, there may be (founded) resistance. Make sure your
  changes are indeed a fix, not something that will just hide the problem under the carpet
  (especially with compilation warnings). Also cosmetic fixes, unnecessary changes are 
  generally not welcome (but I admit it's sometimes hard to resist).</p>
<p><strong>הנה כמה נקודות התחלה:</strong></p>
<ul>
  <li>מערכים בגודל קבוע כמו 'foo[100]'. 100, מאיפה הם צצו?</li>
  <li>מערכים בגדלים 255, 256, 512, 1024. סביר להניח שאלו משתנים שיעודם לאחסן נתיב. אך ניתן גם להשתמש
    אך ניתן להשתמש גם בשמות המקרו הסטנדרטיים כגון MAX_PATH, MAX_PATHNAME_LEN
    או כל מיני כאלה. אבל אילו?</li>
  <li>קריאות ל־sprintf עם גודל אוגר שגוי</li>
  <li>שימוש לא יעיל ב־strcat (לא ממש באג וגם לא ממש חיוני)</li>
</ul>
<p>כישורים נדרשים:</p>
<ul>
  <li>תכנות ב־C</li>
</ul>

<h2 id="misc">שונות</h2>

<h3 id="doc">כתיבת תיעוד</h3>

<p>Wine is in constant need of documentation updates.  Wine has its
  "<a href="{$root}/site/documentation">Guides</a>," like the Wine User Guide etc.
  The SGML source of the Guides can be found in a <a href="http://source.winehq.org/git/docs.git">
  separate Git tree</a>.</p>
<p>Other important documentation items are the README file
  and also the man pages and other files in the documentation/directory.</p>
<p>Your job would be to make sure that every patch a developer submits
  that changes the Wine configuration behaviour in any way gets documented
  properly as soon as possible.  This would be done through testing new
  functionality and optionally asking developers about what their patch truly
  does (and of course don't forget to beat up developers that don't document
  the workings of their patch at all!).</p>
<p>The documentation updates would be done by sending "cvs diff"s of the
  relevant files to wine-patches.</p>
<p>Requirements:</p>
<ul>
  <li>Relatively good understanding of programming and Wine preferred</li>
  <li>Preferably proficient with SGML/DocBook and its tools</li>
  <li>Persistence (constant feature changes!)</li>
</ul>

<h3 id="localized">עבודות תרגום</h3>

<p>Also, we need to have localized versions of the Wine Guides and man
  pages. For this to work, we'll need many people willing to translate
  changes to the main English documentation into foreign languages. If you're
  willing to register for work on a certain language, then please sign up
  with us!</p>
<p>At this time we are looking for people who can translate.</p>
<ul>
  <li>The README and maintain the translation.</li>
  <li>The Wine resources and messages it issues (but not the debug messages of course). You can check the <a href="http://source.winehq.org/transl/">Wine translation statistics</a> for your language to see how much there is to do.</li>
</ul>
<p>We also need a 'QuickStart/Howto' document that would describe the basic instructions
  for installing and configuring Wine in a bit more details than the README while being much
  smaller than the Wine User Guide (it could actually be a chapter of that guide). Then that
  document could be translated in multiple languages which would at least make it easier for
  non-english speaking people to set up and install Wine.</p>
<p>Requirements:</p>
<ul>
  <li>Relatively good understanding of programming and Wine preferred</li>
  <li>Preferably proficient with SGML/DocBook and its tools</li>
  <li>Persistence (constant feature changes!)</li>
  <li>Linguistics</li>
</ul>

<h3 id="pr_">יחסי ציבור</h3> 

<p>Currently we almost have no Public Relationship management at all.
  This should change for the better.</p>
<p>Currently almost the only form of PR is "preaching to the choir",
  since we're having articles on online IT sites (by far most are Linux only !).
  We should have much more coverage on traditional Window'ish sites and,
  most importantly, in dead-tree newspapers, to enlighten the general public
  also known as The Great Unwashed Masses!</p>
<p>Thus such a job would involve writing articles to be presented in
  both large and local newspapers and also online publications.</p>
<p>Requirements:</p>
<ul>
  <li>Moderately experienced Wine user</li>
  <li>Someone willing to demo Wine at LUG meetings, Computer shows, Linux Install-fest</li>
  <li>Contacts to the press preferred, but by no means required</li>
</ul>

<h3 id="wpf">Wine Development Fund</h3>

<p>The purpose of the Wine Development Fund is to show appreciation to Wine
developers by collecting funds for developer meetings, such as Wine
Conferences, or in some cases to purchase documentation.</p>

<p>The organization that currently manages our donations is the 
<a href="http://conservancy.softwarefreedom.org/">Software Freedom
Conservancy</a>. If you have any questions or are otherwise in need 
of further assistance please visit the SFC site.</p>

<p>The Software Freedom Conservancy is a 501(c)(3) organization, and
donations made through it are fully tax-deductible to the extent
permitted by law.</p>
<p><strong>דרכים לתרומה:</strong></p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<div>
  <input type="hidden" name="cmd" value="_xclick">
  <input type="hidden" name="business" value="donate@winehq.org">
  <input type="hidden" name="item_name" value="Wine donation">
  <input type="image" src="{$root}/images/ppdonate.png" name="submit"
    align="absmiddle" alt="Donate to Wine with PayPal!"> Our PayPal Account
</div>
</form>

<p>We also have a SourceForge PayPal account
  <a href="http://sourceforge.net/donate/index.php?group_id=6241">sourceforge.net</a></p>

<p>You can also send cash, cheque or international money order in US funds to:</p>
<address>Wine Project
Software Freedom Conservancy
1995 Broadway FL 17
New York, NY 10023-5882</address>
<p>Purchase books or music from <a href="http://www.amazon.com/exec/obidos/redirect-home/winehq">
  Amazon.com</a> or <a href="http://www.cdnow.com/from=sr-1093221">CDnow</a> (Use
  these specific links only, so that the Wine Party Fund gets the credit.)</p>
